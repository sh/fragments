// Generated by CoffeeScript 1.9.1
module.exports.fragments_RequestLifetime = function(fragments_requestFactories, fragments_tracingResolver, fragments_namespaceResolver, fragments_aliasResolver) {
  var RequestLifetime;
  RequestLifetime = function(req, res) {
    this.values = {
      fragments_req: req,
      fragments_res: res
    };
    return this;
  };
  RequestLifetime.prototype.factories = fragments_requestFactories;
  RequestLifetime.prototype.resolvers = [fragments_namespaceResolver, fragments_aliasResolver];
  return RequestLifetime;
};

module.exports.fragments_MiddlewareLifetime = function(fragments_middlewareFactories, fragments_tracingResolver, fragments_namespaceResolver, fragments_aliasResolver) {
  var MiddlewareLifetime;
  MiddlewareLifetime = function(next, params) {
    this.values = {
      fragments_params: params,
      fragments_next: next
    };
    return this;
  };
  MiddlewareLifetime.prototype.factories = fragments_middlewareFactories;
  MiddlewareLifetime.prototype.resolvers = [fragments_namespaceResolver, fragments_aliasResolver];
  return MiddlewareLifetime;
};

module.exports.fragments_MIDDLEWARE = function(fragments_hinoki, fragments_applicationLifetime, fragments_RequestLifetime, fragments_MiddlewareLifetime) {
  return function(middlewareFactory) {
    return function(req, res, next, params) {
      if (req.hinokiRequestLifetime == null) {
        req.hinokiRequestLifetime = new fragments_RequestLifetime(req, res);
      }
      return fragments_hinoki([new fragments_MiddlewareLifetime(next, params), req.hinokiRequestLifetime, fragments_applicationLifetime], fragments_hinoki.getAndCacheNamesToInject(middlewareFactory)).spread(middlewareFactory)["catch"](function(err) {
        console.log('ERROR');
        console.log(err);
        console.log(err.stack);
        res.statusCode = 500;
        return res.end('Server Error');
      });
    };
  };
};

['get', 'post', 'put', 'delete', 'patch', 'any'].forEach(function(method) {
  return module.exports["fragments_" + (method.toUpperCase())] = function(fragments_passage, fragments_MIDDLEWARE) {
    return function(urlPattern, routeFactory) {
      var routeMiddleware;
      routeMiddleware = fragments_MIDDLEWARE(routeFactory);
      return fragments_passage[method](urlPattern, routeMiddleware);
    };
  };
});
